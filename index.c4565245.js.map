{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["\"use strict\";\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\nclass $a5fd07fa01589658$var$Game {\n    constructor(initialState = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ]){\n        this.board = initialState;\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    getState() {\n        return this.board;\n    }\n    getScore() {\n        return this.score;\n    }\n    getStatus() {\n        return this.status;\n    }\n    start() {\n        this.board = this.generateNewTile(this.generateNewTile(this.board));\n        this.score = 0;\n        this.status = \"playing\";\n    }\n    restart() {\n        this.board = [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        this.score = 0;\n        this.status = \"playing\";\n    }\n    generateNewTile(board) {\n        const emptyCells = [];\n        for(let i = 0; i < board.length; i++){\n            for(let j = 0; j < board[i].length; j++)if (board[i][j] === 0) emptyCells.push({\n                x: i,\n                y: j\n            });\n        }\n        if (emptyCells.length > 0) {\n            const { x: x, y: y } = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n            board[x][y] = Math.random() < 0.9 ? 2 : 4;\n        }\n        return board;\n    }\n    moveLeft() {\n        this.board = this.combine(this.slide(this.board));\n        this.board = this.generateNewTile(this.board);\n    }\n    moveRight() {\n        this.board = this.reverse(this.board);\n        this.moveLeft();\n        this.board = this.reverse(this.board);\n    }\n    moveUp() {\n        this.board = this.transpose(this.board);\n        this.moveLeft();\n        this.board = this.transpose(this.board);\n    }\n    moveDown() {\n        this.board = this.transpose(this.board);\n        this.moveRight();\n        this.board = this.transpose(this.board);\n    }\n    slide(board) {\n        return board.map((row)=>{\n            const arr = row.filter((val)=>val);\n            const missing = 4 - arr.length;\n            const zeros = Array(missing).fill(0);\n            return arr.concat(zeros);\n        });\n    }\n    combine(board) {\n        for(let i = 0; i < board.length; i++){\n            for(let j = 0; j < board[i].length - 1; j++)if (board[i][j] === board[i][j + 1] && board[i][j] !== 0) {\n                board[i][j] *= 2;\n                board[i][j + 1] = 0;\n                this.score += board[i][j];\n            }\n        }\n        return board;\n    }\n    reverse(board) {\n        return board.map((row)=>row.reverse());\n    }\n    transpose(board) {\n        return board[0].map((_, i)=>board.map((row)=>row[i]));\n    }\n}\n// control comment to commit\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports();\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const startButton = document.querySelector(\".button.start\");\n    const gameScore = document.querySelector(\".game-score\");\n    const gameBoard = document.querySelector(\".game-field\");\n    const messageStart = document.querySelector(\".message-start\");\n    const messageWin = document.querySelector(\".message-win\");\n    const messageLose = document.querySelector(\".message-lose\");\n    function updateUI() {\n        gameScore.textContent = $09e991522ca7e64e$var$game.getScore();\n        const board = $09e991522ca7e64e$var$game.getState();\n        const cells = gameBoard.getElementsByTagName(\"td\");\n        for(let i = 0; i < cells.length; i++){\n            const row = Math.floor(i / 4);\n            const col = i % 4;\n            const value = board[row][col];\n            cells[i].className = \"field-cell\";\n            if (value !== 0) {\n                cells[i].classList.add(`field-cell--${value}`);\n                cells[i].textContent = value;\n            } else cells[i].textContent = \"\";\n        }\n        if ($09e991522ca7e64e$var$game.getStatus() === \"win\") {\n            messageWin.classList.remove(\"hidden\");\n            messageLose.classList.add(\"hidden\");\n            messageStart.classList.add(\"hidden\");\n        } else if ($09e991522ca7e64e$var$game.getStatus() === \"lose\") {\n            messageLose.classList.remove(\"hidden\");\n            messageWin.classList.add(\"hidden\");\n            messageStart.classList.add(\"hidden\");\n        } else {\n            messageWin.classList.add(\"hidden\");\n            messageLose.classList.add(\"hidden\");\n        }\n    }\n    function startGame() {\n        $09e991522ca7e64e$var$game.start();\n        startButton.textContent = \"Restart\";\n        startButton.classList.remove(\"start\");\n        startButton.classList.add(\"restart\");\n        messageStart.classList.add(\"hidden\");\n        updateUI();\n    }\n    function restartGame() {\n        $09e991522ca7e64e$var$game.restart();\n        startButton.textContent = \"Start\";\n        startButton.classList.remove(\"restart\");\n        startButton.classList.add(\"start\");\n        initializeGame();\n    }\n    function initializeGame() {\n        const cells = gameBoard.getElementsByTagName(\"td\");\n        for (const cell of cells){\n            cell.className = \"field-cell\";\n            cell.textContent = \"\";\n        }\n        startButton.textContent = \"Start\";\n        startButton.classList.remove(\"restart\");\n        startButton.classList.add(\"start\");\n        messageStart.classList.remove(\"hidden\");\n        updateUI();\n    }\n    startButton.addEventListener(\"click\", ()=>{\n        if (startButton.textContent === \"Start\") startGame();\n        else restartGame();\n    });\n    document.addEventListener(\"keydown\", (e)=>{\n        if ($09e991522ca7e64e$var$game.getStatus() !== \"playing\") return;\n        let moved = false;\n        switch(e.key){\n            case \"ArrowLeft\":\n                $09e991522ca7e64e$var$game.moveLeft();\n                moved = true;\n                break;\n            case \"ArrowRight\":\n                $09e991522ca7e64e$var$game.moveRight();\n                moved = true;\n                break;\n            case \"ArrowUp\":\n                $09e991522ca7e64e$var$game.moveUp();\n                moved = true;\n                break;\n            case \"ArrowDown\":\n                $09e991522ca7e64e$var$game.moveDown();\n                moved = true;\n                break;\n        }\n        if (moved) {\n            updateUI();\n            if (!canMove($09e991522ca7e64e$var$game.getState())) {\n                $09e991522ca7e64e$var$game.status = \"lose\";\n                updateUI();\n            }\n            if (has2048($09e991522ca7e64e$var$game.getState())) {\n                $09e991522ca7e64e$var$game.status = \"win\";\n                updateUI();\n            }\n        }\n    });\n    function canMove(board) {\n        for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++){\n            if (board[i][j] === 0) return true;\n            if (i !== 3 && board[i][j] === board[i + 1][j]) return true;\n            if (j !== 3 && board[i][j] === board[i][j + 1]) return true;\n        }\n        return false;\n    }\n    function has2048(board) {\n        for (const row of board){\n            if (row.includes(2048)) return true;\n        }\n        return false;\n    }\n    initializeGame();\n});\n\n\n//# sourceMappingURL=index.c4565245.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const startButton = document.querySelector('.button.start');\n  const gameScore = document.querySelector('.game-score');\n  const gameBoard = document.querySelector('.game-field');\n  const messageStart = document.querySelector('.message-start');\n  const messageWin = document.querySelector('.message-win');\n  const messageLose = document.querySelector('.message-lose');\n\n  function updateUI() {\n    gameScore.textContent = game.getScore();\n\n    const board = game.getState();\n    const cells = gameBoard.getElementsByTagName('td');\n\n    for (let i = 0; i < cells.length; i++) {\n      const row = Math.floor(i / 4);\n      const col = i % 4;\n      const value = board[row][col];\n\n      cells[i].className = 'field-cell';\n\n      if (value !== 0) {\n        cells[i].classList.add(`field-cell--${value}`);\n        cells[i].textContent = value;\n      } else {\n        cells[i].textContent = '';\n      }\n    }\n\n    if (game.getStatus() === 'win') {\n      messageWin.classList.remove('hidden');\n      messageLose.classList.add('hidden');\n      messageStart.classList.add('hidden');\n    } else if (game.getStatus() === 'lose') {\n      messageLose.classList.remove('hidden');\n      messageWin.classList.add('hidden');\n      messageStart.classList.add('hidden');\n    } else {\n      messageWin.classList.add('hidden');\n      messageLose.classList.add('hidden');\n    }\n  }\n\n  function startGame() {\n    game.start();\n    startButton.textContent = 'Restart';\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    messageStart.classList.add('hidden');\n    updateUI();\n  }\n\n  function restartGame() {\n    game.restart();\n    startButton.textContent = 'Start';\n    startButton.classList.remove('restart');\n    startButton.classList.add('start');\n    initializeGame();\n  }\n\n  function initializeGame() {\n    const cells = gameBoard.getElementsByTagName('td');\n\n    for (const cell of cells) {\n      cell.className = 'field-cell';\n      cell.textContent = '';\n    }\n\n    startButton.textContent = 'Start';\n    startButton.classList.remove('restart');\n    startButton.classList.add('start');\n    messageStart.classList.remove('hidden');\n    updateUI();\n  }\n\n  startButton.addEventListener('click', () => {\n    if (startButton.textContent === 'Start') {\n      startGame();\n    } else {\n      restartGame();\n    }\n  });\n\n  document.addEventListener('keydown', (e) => {\n    if (game.getStatus() !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    switch (e.key) {\n      case 'ArrowLeft':\n        game.moveLeft();\n        moved = true;\n        break;\n      case 'ArrowRight':\n        game.moveRight();\n        moved = true;\n        break;\n      case 'ArrowUp':\n        game.moveUp();\n        moved = true;\n        break;\n      case 'ArrowDown':\n        game.moveDown();\n        moved = true;\n        break;\n    }\n\n    if (moved) {\n      updateUI();\n\n      if (!canMove(game.getState())) {\n        game.status = 'lose';\n        updateUI();\n      }\n\n      if (has2048(game.getState())) {\n        game.status = 'win';\n        updateUI();\n      }\n    }\n  });\n\n  function canMove(board) {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (board[i][j] === 0) {\n          return true;\n        }\n\n        if (i !== 3 && board[i][j] === board[i + 1][j]) {\n          return true;\n        }\n\n        if (j !== 3 && board[i][j] === board[i][j + 1]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  function has2048(board) {\n    for (const row of board) {\n      if (row.includes(2048)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  initializeGame();\n});\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.board = initialState;\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.board = this.generateNewTile(this.generateNewTile(this.board));\n    this.score = 0;\n    this.status = 'playing';\n  }\n\n  restart() {\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    this.score = 0;\n    this.status = 'playing';\n  }\n\n  generateNewTile(board) {\n    const emptyCells = [];\n\n    for (let i = 0; i < board.length; i++) {\n      for (let j = 0; j < board[i].length; j++) {\n        if (board[i][j] === 0) {\n          emptyCells.push({ x: i, y: j });\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const { x, y } =\n        emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n      board[x][y] = Math.random() < 0.9 ? 2 : 4;\n    }\n\n    return board;\n  }\n\n  moveLeft() {\n    this.board = this.combine(this.slide(this.board));\n    this.board = this.generateNewTile(this.board);\n  }\n\n  moveRight() {\n    this.board = this.reverse(this.board);\n    this.moveLeft();\n    this.board = this.reverse(this.board);\n  }\n\n  moveUp() {\n    this.board = this.transpose(this.board);\n    this.moveLeft();\n    this.board = this.transpose(this.board);\n  }\n\n  moveDown() {\n    this.board = this.transpose(this.board);\n    this.moveRight();\n    this.board = this.transpose(this.board);\n  }\n\n  slide(board) {\n    return board.map((row) => {\n      const arr = row.filter((val) => val);\n      const missing = 4 - arr.length;\n      const zeros = Array(missing).fill(0);\n\n      return arr.concat(zeros);\n    });\n  }\n\n  combine(board) {\n    for (let i = 0; i < board.length; i++) {\n      for (let j = 0; j < board[i].length - 1; j++) {\n        if (board[i][j] === board[i][j + 1] && board[i][j] !== 0) {\n          board[i][j] *= 2;\n          board[i][j + 1] = 0;\n          this.score += board[i][j];\n        }\n      }\n    }\n\n    return board;\n  }\n\n  reverse(board) {\n    return board.map((row) => row.reverse());\n  }\n\n  transpose(board) {\n    return board[0].map((_, i) => board.map((row) => row[i]));\n  }\n}\n// control comment to commit\n\nmodule.exports = Game;\n"],"names":["$09e991522ca7e64e$var$game","constructor","initialState","board","score","status","getState","getScore","getStatus","start","generateNewTile","restart","emptyCells","i","length","j","push","x","y","Math","floor","random","moveLeft","combine","slide","moveRight","reverse","moveUp","transpose","moveDown","map","row","arr","filter","val","zeros","Array","fill","concat","_","document","addEventListener","startButton","querySelector","gameScore","gameBoard","messageStart","messageWin","messageLose","updateUI","textContent","cells","getElementsByTagName","col","value","className","classList","add","remove","initializeGame","cell","e","moved","key","canMove","has2048","includes"],"version":3,"file":"index.c4565245.js.map"}