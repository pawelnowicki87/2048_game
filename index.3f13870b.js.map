{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.board = initialState;\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.board = this.generateNewTile(this.generateNewTile(this.board));\n                this.score = 0;\n                this.status = \"playing\";\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.board = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.score = 0;\n                this.status = \"playing\";\n            }\n        },\n        {\n            key: \"generateNewTile\",\n            value: function generateNewTile(board) {\n                var emptyCells = [];\n                for(var i = 0; i < board.length; i++){\n                    for(var j = 0; j < board[i].length; j++)if (board[i][j] === 0) emptyCells.push({\n                        x: i,\n                        y: j\n                    });\n                }\n                if (emptyCells.length > 0) {\n                    var _emptyCells_Math_floor = emptyCells[Math.floor(Math.random() * emptyCells.length)], x = _emptyCells_Math_floor.x, y = _emptyCells_Math_floor.y;\n                    board[x][y] = Math.random() < 0.9 ? 2 : 4;\n                }\n                return board;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.board = this.combine(this.slide(this.board));\n                this.board = this.generateNewTile(this.board);\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.board = this.reverse(this.board);\n                this.moveLeft();\n                this.board = this.reverse(this.board);\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.board = this.transpose(this.board);\n                this.moveLeft();\n                this.board = this.transpose(this.board);\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.board = this.transpose(this.board);\n                this.moveRight();\n                this.board = this.transpose(this.board);\n            }\n        },\n        {\n            key: \"slide\",\n            value: function slide(board) {\n                return board.map(function(row) {\n                    var arr = row.filter(function(val) {\n                        return val;\n                    });\n                    var missing = 4 - arr.length;\n                    var zeros = Array(missing).fill(0);\n                    return arr.concat(zeros);\n                });\n            }\n        },\n        {\n            key: \"combine\",\n            value: function combine(board) {\n                for(var i = 0; i < board.length; i++){\n                    for(var j = 0; j < board[i].length - 1; j++)if (board[i][j] === board[i][j + 1] && board[i][j] !== 0) {\n                        board[i][j] *= 2;\n                        board[i][j + 1] = 0;\n                        this.score += board[i][j];\n                    }\n                }\n                return board;\n            }\n        },\n        {\n            key: \"reverse\",\n            value: function reverse(board) {\n                return board.map(function(row) {\n                    return row.reverse();\n                });\n            }\n        },\n        {\n            key: \"transpose\",\n            value: function transpose(board) {\n                return board[0].map(function(_, i) {\n                    return board.map(function(row) {\n                        return row[i];\n                    });\n                });\n            }\n        }\n    ]);\n    return Game;\n}();\n// control comment to commit\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var updateUI = function updateUI() {\n        gameScore.textContent = $197cd56b15c33885$var$game.getScore();\n        var board = $197cd56b15c33885$var$game.getState();\n        var cells = gameBoard.getElementsByTagName(\"td\");\n        for(var i = 0; i < cells.length; i++){\n            var row = Math.floor(i / 4);\n            var col = i % 4;\n            var value = board[row][col];\n            cells[i].className = \"field-cell\";\n            if (value !== 0) {\n                cells[i].classList.add(\"field-cell--\".concat(value));\n                cells[i].textContent = value;\n            } else cells[i].textContent = \"\";\n        }\n        if ($197cd56b15c33885$var$game.getStatus() === \"win\") {\n            messageWin.classList.remove(\"hidden\");\n            messageLose.classList.add(\"hidden\");\n            messageStart.classList.add(\"hidden\");\n        } else if ($197cd56b15c33885$var$game.getStatus() === \"lose\") {\n            messageLose.classList.remove(\"hidden\");\n            messageWin.classList.add(\"hidden\");\n            messageStart.classList.add(\"hidden\");\n        } else {\n            messageWin.classList.add(\"hidden\");\n            messageLose.classList.add(\"hidden\");\n        }\n    };\n    var startGame = function startGame() {\n        $197cd56b15c33885$var$game.start();\n        startButton.textContent = \"Restart\";\n        startButton.classList.remove(\"start\");\n        startButton.classList.add(\"restart\");\n        messageStart.classList.add(\"hidden\");\n        updateUI();\n    };\n    var restartGame = function restartGame() {\n        $197cd56b15c33885$var$game.restart();\n        startButton.textContent = \"Start\";\n        startButton.classList.remove(\"restart\");\n        startButton.classList.add(\"start\");\n        initializeGame();\n    };\n    var initializeGame = function initializeGame() {\n        var cells = gameBoard.getElementsByTagName(\"td\");\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = cells[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var cell = _step.value;\n                cell.className = \"field-cell\";\n                cell.textContent = \"\";\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        startButton.textContent = \"Start\";\n        startButton.classList.remove(\"restart\");\n        startButton.classList.add(\"start\");\n        messageStart.classList.remove(\"hidden\");\n        updateUI();\n    };\n    var canMove = function canMove(board) {\n        for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n            if (board[i][j] === 0) return true;\n            if (i !== 3 && board[i][j] === board[i + 1][j]) return true;\n            if (j !== 3 && board[i][j] === board[i][j + 1]) return true;\n        }\n        return false;\n    };\n    var has2048 = function has2048(board) {\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = board[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var row = _step.value;\n                if (row.includes(2048)) return true;\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        return false;\n    };\n    var startButton = document.querySelector(\".button.start\");\n    var gameScore = document.querySelector(\".game-score\");\n    var gameBoard = document.querySelector(\".game-field\");\n    var messageStart = document.querySelector(\".message-start\");\n    var messageWin = document.querySelector(\".message-win\");\n    var messageLose = document.querySelector(\".message-lose\");\n    startButton.addEventListener(\"click\", function() {\n        if (startButton.textContent === \"Start\") startGame();\n        else restartGame();\n    });\n    document.addEventListener(\"keydown\", function(e) {\n        if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n        var moved = false;\n        switch(e.key){\n            case \"ArrowLeft\":\n                $197cd56b15c33885$var$game.moveLeft();\n                moved = true;\n                break;\n            case \"ArrowRight\":\n                $197cd56b15c33885$var$game.moveRight();\n                moved = true;\n                break;\n            case \"ArrowUp\":\n                $197cd56b15c33885$var$game.moveUp();\n                moved = true;\n                break;\n            case \"ArrowDown\":\n                $197cd56b15c33885$var$game.moveDown();\n                moved = true;\n                break;\n        }\n        if (moved) {\n            updateUI();\n            if (!canMove($197cd56b15c33885$var$game.getState())) {\n                $197cd56b15c33885$var$game.status = \"lose\";\n                updateUI();\n            }\n            if (has2048($197cd56b15c33885$var$game.getState())) {\n                $197cd56b15c33885$var$game.status = \"win\";\n                updateUI();\n            }\n        }\n    });\n    initializeGame();\n});\n\n})();\n//# sourceMappingURL=index.3f13870b.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const startButton = document.querySelector('.button.start');\n  const gameScore = document.querySelector('.game-score');\n  const gameBoard = document.querySelector('.game-field');\n  const messageStart = document.querySelector('.message-start');\n  const messageWin = document.querySelector('.message-win');\n  const messageLose = document.querySelector('.message-lose');\n\n  function updateUI() {\n    gameScore.textContent = game.getScore();\n\n    const board = game.getState();\n    const cells = gameBoard.getElementsByTagName('td');\n\n    for (let i = 0; i < cells.length; i++) {\n      const row = Math.floor(i / 4);\n      const col = i % 4;\n      const value = board[row][col];\n\n      cells[i].className = 'field-cell';\n\n      if (value !== 0) {\n        cells[i].classList.add(`field-cell--${value}`);\n        cells[i].textContent = value;\n      } else {\n        cells[i].textContent = '';\n      }\n    }\n\n    if (game.getStatus() === 'win') {\n      messageWin.classList.remove('hidden');\n      messageLose.classList.add('hidden');\n      messageStart.classList.add('hidden');\n    } else if (game.getStatus() === 'lose') {\n      messageLose.classList.remove('hidden');\n      messageWin.classList.add('hidden');\n      messageStart.classList.add('hidden');\n    } else {\n      messageWin.classList.add('hidden');\n      messageLose.classList.add('hidden');\n    }\n  }\n\n  function startGame() {\n    game.start();\n    startButton.textContent = 'Restart';\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    messageStart.classList.add('hidden');\n    updateUI();\n  }\n\n  function restartGame() {\n    game.restart();\n    startButton.textContent = 'Start';\n    startButton.classList.remove('restart');\n    startButton.classList.add('start');\n    initializeGame();\n  }\n\n  function initializeGame() {\n    const cells = gameBoard.getElementsByTagName('td');\n\n    for (const cell of cells) {\n      cell.className = 'field-cell';\n      cell.textContent = '';\n    }\n\n    startButton.textContent = 'Start';\n    startButton.classList.remove('restart');\n    startButton.classList.add('start');\n    messageStart.classList.remove('hidden');\n    updateUI();\n  }\n\n  startButton.addEventListener('click', () => {\n    if (startButton.textContent === 'Start') {\n      startGame();\n    } else {\n      restartGame();\n    }\n  });\n\n  document.addEventListener('keydown', (e) => {\n    if (game.getStatus() !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    switch (e.key) {\n      case 'ArrowLeft':\n        game.moveLeft();\n        moved = true;\n        break;\n      case 'ArrowRight':\n        game.moveRight();\n        moved = true;\n        break;\n      case 'ArrowUp':\n        game.moveUp();\n        moved = true;\n        break;\n      case 'ArrowDown':\n        game.moveDown();\n        moved = true;\n        break;\n    }\n\n    if (moved) {\n      updateUI();\n\n      if (!canMove(game.getState())) {\n        game.status = 'lose';\n        updateUI();\n      }\n\n      if (has2048(game.getState())) {\n        game.status = 'win';\n        updateUI();\n      }\n    }\n  });\n\n  function canMove(board) {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (board[i][j] === 0) {\n          return true;\n        }\n\n        if (i !== 3 && board[i][j] === board[i + 1][j]) {\n          return true;\n        }\n\n        if (j !== 3 && board[i][j] === board[i][j + 1]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  function has2048(board) {\n    for (const row of board) {\n      if (row.includes(2048)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  initializeGame();\n});\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.board = initialState;\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.board = this.generateNewTile(this.generateNewTile(this.board));\n    this.score = 0;\n    this.status = 'playing';\n  }\n\n  restart() {\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    this.score = 0;\n    this.status = 'playing';\n  }\n\n  generateNewTile(board) {\n    const emptyCells = [];\n\n    for (let i = 0; i < board.length; i++) {\n      for (let j = 0; j < board[i].length; j++) {\n        if (board[i][j] === 0) {\n          emptyCells.push({ x: i, y: j });\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const { x, y } =\n        emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n      board[x][y] = Math.random() < 0.9 ? 2 : 4;\n    }\n\n    return board;\n  }\n\n  moveLeft() {\n    this.board = this.combine(this.slide(this.board));\n    this.board = this.generateNewTile(this.board);\n  }\n\n  moveRight() {\n    this.board = this.reverse(this.board);\n    this.moveLeft();\n    this.board = this.reverse(this.board);\n  }\n\n  moveUp() {\n    this.board = this.transpose(this.board);\n    this.moveLeft();\n    this.board = this.transpose(this.board);\n  }\n\n  moveDown() {\n    this.board = this.transpose(this.board);\n    this.moveRight();\n    this.board = this.transpose(this.board);\n  }\n\n  slide(board) {\n    return board.map((row) => {\n      const arr = row.filter((val) => val);\n      const missing = 4 - arr.length;\n      const zeros = Array(missing).fill(0);\n\n      return arr.concat(zeros);\n    });\n  }\n\n  combine(board) {\n    for (let i = 0; i < board.length; i++) {\n      for (let j = 0; j < board[i].length - 1; j++) {\n        if (board[i][j] === board[i][j + 1] && board[i][j] !== 0) {\n          board[i][j] *= 2;\n          board[i][j + 1] = 0;\n          this.score += board[i][j];\n        }\n      }\n    }\n\n    return board;\n  }\n\n  reverse(board) {\n    return board.map((row) => row.reverse());\n  }\n\n  transpose(board) {\n    return board[0].map((_, i) => board.map((row) => row[i]));\n  }\n}\n// control comment to commit\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n"],"names":["$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","length","instance","Constructor","TypeError","board","score","status","key","value","generateNewTile","emptyCells","i","j","push","x","y","_emptyCells_Math_floor","Math","floor","random","combine","slide","reverse","moveLeft","transpose","moveRight","map","row","arr","filter","val","zeros","Array","fill","concat","_","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","prototype","document","addEventListener","updateUI","gameScore","textContent","getScore","getState","cells","gameBoard","getElementsByTagName","col","className","classList","add","getStatus","messageWin","remove","messageLose","messageStart","startGame","start","startButton","restartGame","restart","initializeGame","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","cell","err","return","canMove","has2048","includes","querySelector","e","moved","moveUp","moveDown"],"version":3,"file":"index.3f13870b.js.map"}